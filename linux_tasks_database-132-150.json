{
  "tasks": [
    {
      "id": 132,
      "command": ["lsblk"],
      "difficulty": 2,
      "rating": 4,
      "category": "system admin",
      "tags": ["block devices", "tree", "partitions"],
      "task": "Display block devices in tree format with filesystem information",
      "solution": "lsblk -f",
      "explanation": "lsblk -f (list block devices with filesystem information). Shows storage devices in tree format including device names, mount points, filesystem types, and UUIDs. The -f flag adds filesystem details like type, label, and UUID for each partition.",
      "execution_time": "< 1 min",
      "requirements": null,
      "warnings": null,
      "use_case": "Visual overview of storage devices and mount points"
    },
    {
      "id": 133,
      "command": ["parted"],
      "difficulty": 3,
      "rating": 4,
      "category": "system admin",
      "tags": ["partition info", "disk geometry", "advanced"],
      "task": "Display detailed partition information including partition table type",
      "solution": "parted -l",
      "explanation": "parted -l (list all storage devices and their partition tables). Shows detailed information including disk size, partition table type (GPT/MBR), partition boundaries, and filesystem types. More detailed than fdisk and supports GPT partition tables.",
      "execution_time": "< 1 min",
      "requirements": ["sudo privileges"],
      "warnings": "Read-only operation when using -l flag",
      "use_case": "Advanced disk analysis and partition table inspection"
    },
    {
      "id": 134,
      "command": ["blkid"],
      "difficulty": 2,
      "rating": 3,
      "category": "system admin",
      "tags": ["uuid", "filesystem", "identification"],
      "task": "Display UUID and filesystem type for all partitions",
      "solution": "blkid",
      "explanation": "blkid (block device identification). Shows UUID (Universally Unique Identifier), filesystem type, and labels for all available block devices. Essential for creating fstab entries and identifying storage devices reliably.",
      "execution_time": "< 1 min",
      "requirements": null,
      "warnings": null,
      "use_case": "Filesystem identification for fstab configuration"
    },
    {
      "id": 135,
      "command": ["mount"],
      "difficulty": 2,
      "rating": 3,
      "category": "system admin",
      "tags": ["mounting", "filesystem", "access"],
      "task": "Mount USB drive to specific directory and verify mount",
      "solution": "mount /dev/sdb1 /mnt/usb && mount | grep sdb1",
      "explanation": "mount /dev/sdb1 /mnt/usb (mount device /dev/sdb1 to /mnt/usb directory) && mount | grep sdb1 (if successful, verify mount by showing mounted filesystems containing sdb1). Makes filesystem accessible through specified directory.",
      "execution_time": "< 1 min",
      "requirements": ["sudo privileges"],
      "warnings": "Ensure mount point directory exists and USB device path is correct",
      "use_case": "Access external storage devices and removable media"
    },
    {
      "id": 136,
      "command": ["umount"],
      "difficulty": 2,
      "rating": 2,
      "category": "system admin",
      "tags": ["unmounting", "safe removal", "filesystem"],
      "task": "Safely unmount filesystem and verify it's no longer mounted",
      "solution": "umount /mnt/usb && mount | grep usb",
      "explanation": "umount /mnt/usb (unmount filesystem from /mnt/usb mount point) && mount | grep usb (verify unmounting by checking if usb appears in mounted filesystems - should return nothing). Safe way to disconnect storage devices.",
      "execution_time": "< 1 min",
      "requirements": ["sudo privileges"],
      "warnings": "Ensure no processes are using the mounted filesystem",
      "use_case": "Safe removal of external storage devices"
    },
    {
      "id": 137,
      "command": ["mount", "grep"],
      "difficulty": 2,
      "rating": 3,
      "category": "system admin",
      "tags": ["mounted filesystems", "system info", "monitoring"],
      "task": "Display only currently mounted filesystems excluding virtual ones",
      "solution": "mount | grep -E '^/dev'",
      "explanation": "mount (show all mounted filesystems) | grep -E '^/dev' (filter lines starting with /dev using extended regex). Excludes virtual filesystems like proc, sys, tmpfs and shows only physical storage devices currently mounted.",
      "execution_time": "< 1 min",
      "requirements": null,
      "warnings": null,
      "use_case": "Quick overview of physically mounted storage devices"
    },
    {
      "id": 138,
      "command": ["mount", "fstab"],
      "difficulty": 4,
      "rating": 4,
      "category": "system admin",
      "tags": ["persistent mount", "fstab", "configuration"],
      "task": "Add permanent mount entry to fstab and test mount",
      "solution": "echo '/dev/sdb1 /mnt/data ext4 defaults 0 2' >> /etc/fstab && mount -a",
      "explanation": "echo '/dev/sdb1 /mnt/data ext4 defaults 0 2' >> /etc/fstab (append mount entry: device, mount point, filesystem type, options, dump, fsck order) && mount -a (mount all filesystems in fstab). Creates persistent mount that survives reboots.",
      "execution_time": "< 1 min",
      "requirements": ["sudo privileges"],
      "warnings": "Backup /etc/fstab before editing, incorrect entries can prevent boot",
      "use_case": "Configure automatic mounting of storage devices at boot"
    },
    {
      "id": 139,
      "command": ["top"],
      "difficulty": 2,
      "rating": 3,
      "category": "monitoring",
      "tags": ["real-time", "processes", "system load"],
      "task": "Monitor system in real-time and sort processes by memory usage",
      "solution": "top -o %MEM",
      "explanation": "top -o %MEM (start top with processes sorted by memory usage percentage). Provides real-time view of running processes, system load, CPU usage, memory usage. Interactive tool - use 'M' to sort by memory, 'P' by CPU, 'q' to quit.",
      "execution_time": "long-running",
      "requirements": null,
      "warnings": "Press 'q' to quit top",
      "use_case": "Real-time system performance monitoring and troubleshooting"
    },
    {
      "id": 140,
      "command": ["htop"],
      "difficulty": 2,
      "rating": 4,
      "category": "monitoring",
      "tags": ["interactive", "processes", "system monitor"],
      "task": "Use interactive process viewer with color coding and tree view",
      "solution": "htop",
      "explanation": "htop (enhanced interactive process viewer). Improved version of top with color coding, mouse support, horizontal scrolling, tree view of processes. Use F5 for tree view, F6 to sort, F9 to kill processes, F10 to quit.",
      "execution_time": "long-running",
      "requirements": ["htop"],
      "warnings": "Use F10 or 'q' to quit",
      "use_case": "Enhanced system monitoring with better visualization than top"
    },
    {
      "id": 141,
      "command": ["nohup"],
      "difficulty": 3,
      "rating": 4,
      "category": "system admin",
      "tags": ["background", "persistent", "logout"],
      "task": "Run command that continues after logout and redirect output",
      "solution": "nohup python long_script.py > output.log 2>&1 &",
      "explanation": "nohup python long_script.py (run command immune to hangup signals) > output.log (redirect stdout to log file) 2>&1 (redirect stderr to same file as stdout) & (run in background). Process continues even after terminal closes or SSH disconnects.",
      "execution_time": "long-running",
      "requirements": null,
      "warnings": null,
      "use_case": "Run long-running processes that survive session termination"
    },
    {
      "id": 142,
      "command": ["screen"],
      "difficulty": 3,
      "rating": 5,
      "category": "system admin",
      "tags": ["terminal multiplexer", "sessions", "detach"],
      "task": "Create detachable terminal session and reconnect to it",
      "solution": "screen -S mysession && screen -r mysession",
      "explanation": "screen -S mysession (create new screen session named 'mysession') && screen -r mysession (reattach to existing session). Terminal multiplexer allowing detachable sessions that persist across network disconnections. Use Ctrl+A, D to detach.",
      "execution_time": "long-running",
      "requirements": ["screen"],
      "warnings": "Use Ctrl+A, D to detach from screen session",
      "use_case": "Manage persistent terminal sessions for remote work"
    },
    {
      "id": 143,
      "command": ["tmux"],
      "difficulty": 3,
      "rating": 5,
      "category": "system admin",
      "tags": ["terminal multiplexer", "panes", "windows"],
      "task": "Create tmux session with multiple panes and windows",
      "solution": "tmux new-session -s work && tmux split-window -h && tmux new-window",
      "explanation": "tmux new-session -s work (create session named 'work') && tmux split-window -h (split current window horizontally) && tmux new-window (create new window). Advanced terminal multiplexer with windows, panes, and session management.",
      "execution_time": "long-running",
      "requirements": ["tmux"],
      "warnings": "Use Ctrl+B to access tmux commands",
      "use_case": "Advanced terminal session management with multiple workspaces"
    },
    {
      "id": 144,
      "command": ["crontab"],
      "difficulty": 3,
      "rating": 4,
      "category": "automation",
      "tags": ["scheduling", "automation", "maintenance"],
      "task": "Schedule script to run every day at 3 AM and list current cron jobs",
      "solution": "crontab -e # Add: 0 3 * * * /path/to/script.sh && crontab -l",
      "explanation": "crontab -e (edit user's cron table) # Add: 0 3 * * * /path/to/script.sh (cron format: minute hour day month weekday command) && crontab -l (list current cron jobs). Persistent task scheduling that survives reboots.",
      "execution_time": "< 1 min",
      "requirements": null,
      "warnings": "Test scripts manually before scheduling",
      "use_case": "Automated system maintenance and backup scheduling"
    },
    {
      "id": 145,
      "command": ["at"],
      "difficulty": 2,
      "rating": 3,
      "category": "automation",
      "tags": ["one-time", "scheduling", "delayed execution"],
      "task": "Schedule one-time command to run at specific time",
      "solution": "echo 'backup.sh' | at 23:30 && atq",
      "explanation": "echo 'backup.sh' | at 23:30 (schedule backup.sh to run once at 23:30 today) && atq (list pending at jobs). Alternative to cron for one-time scheduled execution. Uses natural time formats like 'tomorrow', 'next week'.",
      "execution_time": "< 1 min",
      "requirements": ["at daemon"],
      "warnings": null,
      "use_case": "Schedule one-time tasks for specific times"
    },
    {
      "id": 146,
      "command": ["uptime"],
      "difficulty": 1,
      "rating": 2,
      "category": "monitoring",
      "tags": ["system load", "uptime", "performance"],
      "task": "Display system uptime and current load averages",
      "solution": "uptime",
      "explanation": "uptime (show system uptime and load averages). Displays current time, how long system has been running, number of users, and load averages for 1, 5, and 15 minutes. Load averages indicate system utilization.",
      "execution_time": "< 1 min",
      "requirements": null,
      "warnings": null,
      "use_case": "Quick system health check and load assessment"
    },
    {
      "id": 147,
      "command": ["free"],
      "difficulty": 1,
      "rating": 2,
      "category": "monitoring",
      "tags": ["memory", "ram", "usage"],
      "task": "Display memory usage in human-readable format",
      "solution": "free -h",
      "explanation": "free -h (show memory usage with human-readable units like GB, MB). Displays total, used, free, shared, buffer/cache, and available memory. Available memory is the key metric for determining if system needs more RAM.",
      "execution_time": "< 1 min",
      "requirements": null,
      "warnings": null,
      "use_case": "Monitor RAM usage and available memory"
    },
    {
      "id": 148,
      "command": ["iostat"],
      "difficulty": 3,
      "rating": 4,
      "category": "monitoring",
      "tags": ["disk io", "performance", "statistics"],
      "task": "Monitor disk I/O statistics in real-time",
      "solution": "iostat -x 2",
      "explanation": "iostat -x 2 (extended I/O statistics updated every 2 seconds). Shows per-device statistics including read/write operations per second, bandwidth, average wait time, and utilization percentage. Essential for diagnosing storage performance issues.",
      "execution_time": "long-running",
      "requirements": ["sysstat package"],
      "warnings": "Press Ctrl+C to stop monitoring",
      "use_case": "Diagnose disk performance issues and I/O bottlenecks"
    },
    {
      "id": 149,
      "command": ["lsof"],
      "difficulty": 3,
      "rating": 4,
      "category": "monitoring",
      "tags": ["open files", "processes", "debugging"],
      "task": "List all files opened by specific process and network connections",
      "solution": "lsof -p 1234 && lsof -i",
      "explanation": "lsof -p 1234 (list open files for process ID 1234) && lsof -i (list network connections). Shows file descriptors, network sockets, shared libraries, and other resources used by processes. Powerful debugging tool for file access issues.",
      "execution_time": "< 1 min",
      "requirements": null,
      "warnings": null,
      "use_case": "Debug file access issues and network connection problems"
    },
    {
      "id": 150,
      "command": ["which", "whereis"],
      "difficulty": 2,
      "rating": 3,
      "category": "system admin",
      "tags": ["command location", "path", "binary"],
      "task": "Find location of command binary and related files",
      "solution": "which python && whereis python",
      "explanation": "which python (find path to python executable in PATH) && whereis python (find python binary, source, and manual pages). which shows the actual executable that would run, whereis provides comprehensive location information including documentation.",
      "execution_time": "< 1 min",
      "requirements": null,
      "warnings": null,
      "use_case": "Locate command binaries for scripting and PATH troubleshooting"
    }
  ]
}
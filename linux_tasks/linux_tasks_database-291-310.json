{
  "tasks": [
    {
      "id": 291,
      "command": ["systemctl"],
      "difficulty": 1,
      "rating": 2,
      "category": "system admin",
      "tags": ["systemd", "status", "service"],
      "task": "Check status of a system service",
      "solution": "systemctl status nginx",
      "explanation": "systemctl status nginx (show detailed status of nginx service including active state, recent logs, and process information). Displays whether service is active, inactive, failed, or disabled.",
      "execution_time": "< 1 min",
      "requirements": ["systemd"],
      "warnings": null,
      "use_case": "Service monitoring and troubleshooting"
    },
    {
      "id": 292,
      "command": ["systemctl"],
      "difficulty": 1,
      "rating": 2,
      "category": "system admin",
      "tags": ["systemd", "start", "service"],
      "task": "Start a system service",
      "solution": "systemctl start nginx",
      "explanation": "systemctl start nginx (start the nginx service immediately). The service will be started but not enabled for automatic startup at boot unless separately enabled.",
      "execution_time": "< 1 min",
      "requirements": ["systemd", "sudo privileges"],
      "warnings": null,
      "use_case": "Manual service startup and system administration"
    },
    {
      "id": 293,
      "command": ["systemctl"],
      "difficulty": 1,
      "rating": 2,
      "category": "system admin",
      "tags": ["systemd", "stop", "service"],
      "task": "Stop a running system service",
      "solution": "systemctl stop nginx",
      "explanation": "systemctl stop nginx (stop the nginx service immediately). The service will be stopped but remains enabled if it was previously enabled for automatic startup.",
      "execution_time": "< 1 min",
      "requirements": ["systemd", "sudo privileges"],
      "warnings": null,
      "use_case": "Service maintenance and system administration"
    },
    {
      "id": 294,
      "command": ["systemctl"],
      "difficulty": 2,
      "rating": 2,
      "category": "system admin",
      "tags": ["systemd", "restart", "service"],
      "task": "Restart a service to apply configuration changes",
      "solution": "systemctl restart nginx",
      "explanation": "systemctl restart nginx (stop and then start nginx service). This completely stops the service and starts it fresh, useful after configuration changes that require full restart.",
      "execution_time": "< 1 min",
      "requirements": ["systemd", "sudo privileges"],
      "warnings": "Brief service downtime during restart",
      "use_case": "Apply configuration changes that require service restart"
    },
    {
      "id": 295,
      "command": ["systemctl"],
      "difficulty": 2,
      "rating": 3,
      "category": "system admin",
      "tags": ["systemd", "reload", "service"],
      "task": "Reload service configuration without stopping service",
      "solution": "systemctl reload nginx",
      "explanation": "systemctl reload nginx (reload configuration without stopping service). Sends SIGHUP or similar signal to service to reload config. Not all services support reload operation.",
      "execution_time": "< 1 min",
      "requirements": ["systemd", "sudo privileges"],
      "warnings": "Not all services support reload operation",
      "use_case": "Apply configuration changes without service downtime"
    },
    {
      "id": 296,
      "command": ["systemctl"],
      "difficulty": 2,
      "rating": 3,
      "category": "system admin",
      "tags": ["systemd", "enable", "boot"],
      "task": "Enable service to start automatically at boot",
      "solution": "systemctl enable nginx",
      "explanation": "systemctl enable nginx (enable nginx service to start automatically at boot time). Creates symlinks in systemd directories to ensure service starts during system initialization.",
      "execution_time": "< 1 min",
      "requirements": ["systemd", "sudo privileges"],
      "warnings": null,
      "use_case": "Configure services for automatic startup after system reboot"
    },
    {
      "id": 297,
      "command": ["systemctl"],
      "difficulty": 2,
      "rating": 3,
      "category": "system admin",
      "tags": ["systemd", "disable", "boot"],
      "task": "Disable service from starting automatically at boot",
      "solution": "systemctl disable nginx",
      "explanation": "systemctl disable nginx (disable nginx service from starting automatically at boot). Removes symlinks created by enable command, preventing automatic startup at boot time.",
      "execution_time": "< 1 min",
      "requirements": ["systemd", "sudo privileges"],
      "warnings": null,
      "use_case": "Prevent unwanted services from starting automatically"
    },
    {
      "id": 298,
      "command": ["systemctl"],
      "difficulty": 2,
      "rating": 3,
      "category": "system admin",
      "tags": ["systemd", "enabled", "status"],
      "task": "Check if service is enabled for automatic startup",
      "solution": "systemctl is-enabled nginx",
      "explanation": "systemctl is-enabled nginx (check if nginx service is enabled for automatic startup at boot). Returns 'enabled', 'disabled', 'static', or other status indicating startup configuration.",
      "execution_time": "< 1 min",
      "requirements": ["systemd"],
      "warnings": null,
      "use_case": "Verify service startup configuration and audit system services"
    },
    {
      "id": 299,
      "command": ["systemctl"],
      "difficulty": 2,
      "rating": 3,
      "category": "system admin",
      "tags": ["systemd", "active", "running"],
      "task": "Check if service is currently running",
      "solution": "systemctl is-active nginx",
      "explanation": "systemctl is-active nginx (check if nginx service is currently active/running). Returns 'active', 'inactive', 'failed', or other status. Useful for scripting and monitoring.",
      "execution_time": "< 1 min",
      "requirements": ["systemd"],
      "warnings": null,
      "use_case": "Service monitoring and health checks in scripts"
    },
    {
      "id": 300,
      "command": ["systemctl"],
      "difficulty": 3,
      "rating": 3,
      "category": "system admin",
      "tags": ["systemd", "list", "services"],
      "task": "List all system services and their states",
      "solution": "systemctl list-units --type=service",
      "explanation": "systemctl list-units --type=service (list all service units with their current state: active, inactive, failed, etc.). Shows loaded services and their status in tabular format.",
      "execution_time": "< 1 min",
      "requirements": ["systemd"],
      "warnings": null,
      "use_case": "System overview and service inventory management"
    },
    {
      "id": 301,
      "command": ["systemctl"],
      "difficulty": 3,
      "rating": 4,
      "category": "system admin",
      "tags": ["systemd", "failed", "troubleshooting"],
      "task": "List all failed services for troubleshooting",
      "solution": "systemctl list-units --failed",
      "explanation": "systemctl list-units --failed (list all units that are in failed state). Helps identify services that failed to start or crashed, useful for system troubleshooting and maintenance.",
      "execution_time": "< 1 min",
      "requirements": ["systemd"],
      "warnings": null,
      "use_case": "System troubleshooting and identifying service failures"
    },
    {
      "id": 302,
      "command": ["systemctl"],
      "difficulty": 3,
      "rating": 4,
      "category": "system admin",
      "tags": ["systemd", "dependencies", "analysis"],
      "task": "Show service dependencies and what depends on it",
      "solution": "systemctl list-dependencies nginx",
      "explanation": "systemctl list-dependencies nginx (show dependency tree for nginx service). Displays what services nginx depends on and optionally what depends on nginx, useful for understanding service relationships.",
      "execution_time": "< 1 min",
      "requirements": ["systemd"],
      "warnings": null,
      "use_case": "Understanding service dependencies and startup order"
    },
    {
      "id": 303,
      "command": ["journalctl"],
      "difficulty": 2,
      "rating": 3,
      "category": "monitoring",
      "tags": ["systemd", "logs", "service"],
      "task": "View logs for specific service",
      "solution": "journalctl -u nginx",
      "explanation": "journalctl -u nginx (show logs for nginx unit/service). Displays all log entries for the specified service from systemd journal, including startup, shutdown, and error messages.",
      "execution_time": "< 1 min",
      "requirements": ["systemd"],
      "warnings": null,
      "use_case": "Service-specific log analysis and troubleshooting"
    },
    {
      "id": 304,
      "command": ["journalctl"],
      "difficulty": 2,
      "rating": 3,
      "category": "monitoring",
      "tags": ["systemd", "logs", "follow"],
      "task": "Follow service logs in real-time",
      "solution": "journalctl -u nginx -f",
      "explanation": "journalctl -u nginx (logs for nginx service) -f (follow logs in real-time, similar to tail -f). Shows new log entries as they appear, useful for live monitoring and debugging.",
      "execution_time": "long-running",
      "requirements": ["systemd"],
      "warnings": "Press Ctrl+C to stop following",
      "use_case": "Real-time service monitoring and live debugging"
    },
    {
      "id": 305,
      "command": ["journalctl"],
      "difficulty": 3,
      "rating": 4,
      "category": "monitoring",
      "tags": ["systemd", "logs", "time range"],
      "task": "View logs from specific time period",
      "solution": "journalctl --since \"1 hour ago\" --until \"30 minutes ago\"",
      "explanation": "journalctl --since \"1 hour ago\" (start time for log range) --until \"30 minutes ago\" (end time for log range). Supports natural language time expressions and ISO timestamps for precise log filtering.",
      "execution_time": "< 1 min",
      "requirements": ["systemd"],
      "warnings": null,
      "use_case": "Incident analysis and investigating issues during specific time periods"
    },
    {
      "id": 306,
      "command": ["journalctl"],
      "difficulty": 3,
      "rating": 4,
      "category": "monitoring",
      "tags": ["systemd", "logs", "priority"],
      "task": "Filter logs by priority level (errors only)",
      "solution": "journalctl -p err",
      "explanation": "journalctl -p err (show only error priority logs and higher). Priority levels: emerg, alert, crit, err, warning, notice, info, debug. Useful for focusing on critical issues.",
      "execution_time": "< 1 min",
      "requirements": ["systemd"],
      "warnings": null,
      "use_case": "Focus on critical system issues and error analysis"
    },
    {
      "id": 307,
      "command": ["systemctl"],
      "difficulty": 3,
      "rating": 4,
      "category": "system admin",
      "tags": ["systemd", "mask", "security"],
      "task": "Mask service to prevent it from being started",
      "solution": "systemctl mask apache2",
      "explanation": "systemctl mask apache2 (completely disable apache2 service by linking it to /dev/null). Masked services cannot be started manually or automatically, stronger than disable. Use unmask to reverse.",
      "execution_time": "< 1 min",
      "requirements": ["systemd", "sudo privileges"],
      "warnings": "Masked services cannot be started until unmasked",
      "use_case": "Security hardening and preventing conflicting services"
    },
    {
      "id": 308,
      "command": ["systemctl"],
      "difficulty": 4,
      "rating": 4,
      "category": "system admin",
      "tags": ["systemd", "edit", "override"],
      "task": "Create service override configuration",
      "solution": "systemctl edit nginx",
      "explanation": "systemctl edit nginx (create override configuration for nginx service). Opens editor to create drop-in file in /etc/systemd/system/nginx.service.d/ that overrides or extends default service configuration.",
      "execution_time": "1-5 min",
      "requirements": ["systemd", "sudo privileges", "text editor"],
      "warnings": "Requires systemctl daemon-reload after editing",
      "use_case": "Customize service configuration without modifying original unit files"
    },
    {
      "id": 309,
      "command": ["systemctl"],
      "difficulty": 4,
      "rating": 5,
      "category": "system admin",
      "tags": ["systemd", "daemon-reload", "configuration"],
      "task": "Reload systemd configuration after making changes",
      "solution": "systemctl daemon-reload",
      "explanation": "systemctl daemon-reload (reload systemd manager configuration). Required after modifying unit files, creating new services, or making configuration changes. Tells systemd to re-read all unit files.",
      "execution_time": "< 1 min",
      "requirements": ["systemd", "sudo privileges"],
      "warnings": null,
      "use_case": "Apply systemd configuration changes and new service definitions"
    },
    {
      "id": 310,
      "command": ["systemctl", "journalctl"],
      "difficulty": 4,
      "rating": 5,
      "category": "monitoring",
      "tags": ["systemd", "monitoring", "automation"],
      "task": "Create monitoring script to check service health and restart if needed",
      "solution": "#!/bin/bash\nif ! systemctl is-active --quiet nginx; then\n  echo \"$(date): nginx is down, restarting...\"\n  systemctl restart nginx\n  journalctl -u nginx --since \"1 minute ago\" | tail -5\nelse\n  echo \"$(date): nginx is running normally\"\nfi",
      "explanation": "Bash script that uses systemctl is-active --quiet nginx (check if service is active without output) ! (negate result) if service is down: echo timestamp and restart message, systemctl restart nginx (restart service), journalctl -u nginx --since \"1 minute ago\" | tail -5 (show recent logs). Else confirm service is running. Complete service monitoring automation.",
      "execution_time": "< 1 min",
      "requirements": ["systemd", "sudo privileges", "bash"],
      "warnings": "Ensure script has appropriate permissions and sudo access",
      "use_case": "Automated service monitoring and recovery for critical services"
    }
  ]
}